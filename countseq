  
#! /usr/bin/env bash

usage() {
cat <<EOF
[Usage]
countseq <seq.file1> <seq.file2> <*.fasta> <*.fastq>
[Examples]
countseq *.fq *.fasta.gz
countseq -n 8 frog_001.fa *.fastq.gz > animal.counts.txt
find -name "wasps*R1.fasta" | countseq
EOF
}

if [[ -z "$1" ]] && [ -t 0 ]; then
    echo -e "\nCounts the number of total base pairs and sequences in fastX files."
    echo "By default will parallelize over 4 threads. Use optional '-n' flag to specify how many CPUs to use."
    usage
    exit
fi

fix_base_count() {
    local counts=($(cat))
    printf  "%-40s%'-15d%'d\n" "$(basename $1)" "${counts[0]}" "$((${counts[1]} - ${counts[0]}))"
}

export -f fix_base_count

countfiles() {
case "$1" in
        *fa.gz | *fa.tgz | *fasta.gz | *fasta.tgz )
        printf "%-40s%'-15d%'d\n" "$(basename $1)" "$(zgrep -c "^>" $1)" "$(zgrep -v "^>" $1 | wc | awk '{print $3-$1}')"
                ;;
        *.fa | *.fasta | *.txt)
        printf "%-40s%'-15d%'d\n" "$(basename $1)" "$(grep -c "^>" $1)" "$(grep -v "^>" $1 | wc | awk '{print $3-$1}')"
                ;;
        *fq.gz | *fq.tgz | *fastq.gz | *.fastq.tgz )
        gzip -dc  $1 \
            | awk 'NR % 4 == 2' \
            | wc -cl \
            | fix_base_count $1
                ;;
        *.fq | *.fastq)
        awk 'NR % 4 == 2' $1 \
            | wc -cl \
            | fix_base_count $1
                ;;
        *)
        echo 'Error - must be ".fasta" ".fa" ".txt" ".fq" ".fastq" or gzipped counterparts'
        ;;
esac
}

filearg=${@};
infiles() {
for i in ${filearg[@]}
do
    if [[ "$i" == *"/"* ]]; then
        find -name $(basename $i)
    else
        find -name $i
    fi
done
}

export -f countfiles
export -f infiles

while getopts "n:" opt; do
  case $opt in
    n)
        cores=$(echo "--jobs $OPTARG")
    ;;
    :)
        cores=$(echo "--jobs 4")
    ;;
  esac
done

printf "%-40s%-15s%s\n" "filename" "sequences" "basepairs"

infiles | parallel $cores countfiles

if [ ! -t 0 ]; then
    cat /dev/stdin  | parallel $cores countfiles
    exit
fi
