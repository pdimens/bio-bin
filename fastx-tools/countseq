  #! /usr/bin/env bash

usage() {
cat <<EOF
[Usage]
countseq <seq.file1> <seq.file2> <*.fasta> <*.fastq>

[Examples]
countseq *.fq *.fasta.gz
countseq frog_001.fa *.fastq.gz > animal.counts.txt
find -name "wasps*R1.fasta" | countseq
EOF
}


declare -a A=("$@")
[[ -p /dev/stdin ]] && { \
    mapfile -t -O ${#A[@]} A; set -- "${A[@]}"; \
}
np=$(($(nproc) / 2))

if [[ -z "$1" ]] && [ -t 0 ]; then
    echo -e "\nCounts the number of total base pairs and sequences in fastX files."
    echo "Counts up to $np files at once on this system (50% of available cpus)."
    echo ""
    usage
    exit
fi

fix_base_count() {
    local counts=($(cat))
    printf  "%-40s%'-15d%'d\n" "$1" "${counts[0]}" "$((${counts[1]} - ${counts[0]}))"
}


export -f fix_base_count

countfiles() {
    if (file $1 | grep -q compressed ) ; then
        GREPTYPE=$(echo "zgrep")
        CATTYPE=$(echo "zcat")
    else
        GREPTYPE=$(echo "grep")
        CATTYPE=$(echo "cat")
    fi
    FIRSTCHAR=$($CATTYPE $1 | head -c 1)
    if [[ "$FIRSTCHAR" == ">" ]]; then    # fasta format
        printf "%-40s%'-15d%'d\n" "$1" "$($GREPTYPE -c "^>" $1)" "$($GREPTYPE -v "^>" $1 | wc | awk '{print $3-$1}')"
    elif [[ "$FIRSTCHAR" = "@" ]]; then  # fastq format
        if (file $1 | grep -q compressed ) ; then
            gzip -dc  $1 \
                | awk 'NR % 4 == 2' \
                | wc -cl \
                | fix_base_count $1
        else
            awk 'NR % 4 == 2' $1 \
                | wc -cl \
                | fix_base_count $1
        fi
    else
        echo "File format cannot be determined by starting character: $FIRSTCHAR"
        exit 0
    fi
}

export -f countfiles

printf "%-40s%-15s%s\n" "filename" "sequences" "basepairs"
parallel --jobs $np countfiles ::: $(echo "$@")
