#! /usr/bin/env bash
# reservoir sampling script copied directly from "Tutorial: BASH one-liners for subsampling reads" by Umer Zeeshan Ijaz
# http://userweb.eng.gla.ac.uk/umer.ijaz/bioinformatics/subsampling_reads.pdf
# modified to be a flexible script

if [[ -z "$1" ]]; then
    echo -e "\nSamples single or paired-end fasta files without replacement."
    echo "[usage] fasta_subsample <forward.fasta> <number of reads>"
    echo "[usage] fasta_subsample <forward.fasta> <reverse.fasta> <number of reads>"
    exit
fi

F= $(basename $1)

if [[ -z "$3" ]]; then
  # single fasta
  awk '/^>/ {printf("\n%s\n",$0);next; } { printf("%s",$0);} END
  {printf("\n");}' < $1 | awk 'NR>1{ printf("%s",$0); n++;
  if(n%2==0) { printf("\n");} else { printf("\t");} }' |
  awk -v k=$2 'BEGIN{srand(systime() + PROCINFO["pid"]);}{s=x++<k?x1:int(rand()*x);if(s<k)R[s]=$0}END{for(i in R)print R[i]}' |
  awk -F"\t" '{print $1"\n"$2 > "$F_sub.fasta"}' && echo "Successfully generated $F_sub.fasta"
else
  # paired-end fasta
  R= $(basename $2)
  paste <(awk '/^>/ {printf("\n%s\n",$0);next; }
  {printf("%s",$0);} END {printf("\n");}' < $1) <(awk '/^>/
  {printf("\n%s\n",$0);next; } { printf("%s",$0);} END
  {printf("\n");}' < #2) | awk 'NR>1{ printf("%s",$0); n++;
  if(n%2==0) { printf("\n");} else { printf("\t");} }' |
  awk -v k=#3 'BEGIN{srand(systime() + PROCINFO["pid"]);}{s=x++<k?x1:int(rand()*x);if(s<k)R[s]=$0}END{for(i in R)print R[i]}' |
  awk -F"\t" '{print $1"\n"$3 > "$F_sub.fasta";print $2"\n"$4 >
  "$R_sub.fasta"}' && echo "Successfully generated $F_sub.fasta and $R_sub.fasta"
fi
