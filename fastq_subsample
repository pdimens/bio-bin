#! /usr/bin/env bash
# reservoir sampling script copied directly from "Tutorial: BASH one-liners for subsampling reads" by Umer Zeeshan Ijaz
# http://userweb.eng.gla.ac.uk/umer.ijaz/bioinformatics/subsampling_reads.pdf
# modified to be a flexible script

if [[ -z "$1" ]]; then
    echo -e "\nSamples single or paired-end fastq files without replacement."
    echo "[usage] fastq_subsample <forward.fq> <number of reads>"
    echo "[usage] fastq_subsample <forward.fq> <reverse.fq> <number of reads>"
    exit
fi

F=$(basename $1)

if [[ -z "$3" ]]; then
  # single fastq
  cat $1 | awk '{ printf("%s",$0); n++; if(n%4==0) {
  printf("\n");} else { printf("\t");} }' |
  awk -v k=$2 'BEGIN{srand(systime() + PROCINFO["pid"]);}{s=x++<k?x1:int(rand()*x);if(s<k)R[s]=$0}END{for(i in R)print R[i]}' |
  awk -F"\t" '{print $1"\n"$2"\n"$3"\n"$4 > "$F_sub.fastq"}' && echo "Successfully generated $F_sub.fastq"
else
  # paired-end fastq
  R= $(basename $2)
  paste $1 $2 | awk '{ printf("%s",$0); n++;
  if(n%4==0) { printf("\n");} else { printf("\t");} }' |
  awk -v k=$3 'BEGIN{srand(systime() + PROCINFO["pid"]);}{s=x++<k?x1:int(rand()*x);if(s<k)R[s]=$0}END{for(i in R)print R[i]}' |
  awk -F"\t" '{print $1"\n"$3"\n"$5"\n"$7 > "$F_sub.fq";print
  $2"\n"$4"\n"$6"\n"$8 > "$R_sub.fq"}' && echo "Successfully generated $F_sub.fastq and $R_sub.fastq"
fi
