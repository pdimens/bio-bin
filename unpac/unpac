#! /usr/bin/env bash

info() {
cat <<EOF

This script will convert PacBio bam files into fasta format using samtools,
concatenating them into a single file and counting the number of base pairs 
and total number of contigs in the concatenated file.

[Usage]	unpac -p <output.prefix> -d <working.directory> -m <multi or single>

-p <prefix>    | prefix output for renamed final fasta files
-d <directory> | path to working directory
-m <mode>      | "single" or "multi" mode (without quotes)

EOF
}

usage() {
cat <<EOF

[Usage]	unpac -p <output.prefix> -d <working.directory> -m <multi or single>

EOF
}

process_subreads() {
  cd $WORKDIR
  mkdir -p subreads_fasta
  echo -e "\n ...converting subreads.bam files to fasta..."
  find ./*/* -name '*.subreads.bam' | parallel "echo 'converting {} to fasta' & samtools fasta {} > ./subreads_fasta/{/.}.unpac.fasta" 
  echo -e "\n ...concatenating fasta files..."
  cat ./subreads_fasta/*unpac.fasta > ./subreads_fasta/$PREFIX.pacbio.subreads.fasta
  echo "Subreads file : $PREFIX.pacbio.subreads.fasta"
  echo -e "\n ...counting the number of contigs and base pairs in the subreads..."
  echo "Total contigs present in $PREFIX.pacbio.subreads.fasta: $(grep -c ">" ./subreads_fasta/$PREFIX.pacbio.subreads.fasta)" >> ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt & \
  echo "Total basepairs present in $PREFIX.pacbio.subreads.fasta: $(grep -v ">" ./subreads_fasta/$PREFIX.pacbio.subreads.fasta | wc | awk '{print $3-$1}')" >> ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt
  head ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt
}

process_scraps() {
  mkdir -p scraps_fasta
  echo -e "\n ...converting scraps.bam files to fasta..."
  find ./*/* -name '*.scraps.bam' | parallel "echo 'converting {} to fasta' & samtools fasta {} > ./scraps_fasta/{/.}.unpac.fasta"
  echo -e "\n ...concatenating fasta files..."
  cat ./scraps_fasta/*unpac.fasta > ./scraps_fasta/$PREFIX.pacbio.scraps.fasta
  echo "Scraps file : is $PREFIX.pacbio.scraps.fasta"
  echo -e "\n ...counting the number of contigs and base pairs in the scraps..."
  echo "Total contigs present in scraps: $(grep -c ">" ./scraps_fasta/$PREFIX.pacbio.scraps.fasta)" >> ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt & \
  echo "Total basepairs present in the scraps: $(grep -v ">" ./scraps_fasta/$PREFIX.pacbio.scraps.fasta | wc | awk '{print $3-$1}')" >> ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt
  head ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt
}

subreads_single() {
  cd $WORKDIR
  mkdir -p subreads_fasta
  echo -e "\n ...converting subreads.bam to fasta... "
  samtools fasta *.subreads.bam > ./subreads_fasta/$PREFIX.pacbio.subreads.fasta
  echo "Subreads file : $PREFIX.pacbio.subreads.fasta"
  echo -e "\n ...counting the number of contigs and base pairs in the subreads..."
  echo "Total contigs present in subreads: $(grep -c ">" ./subreads_fasta/$PREFIX.pacbio.subreads.fasta)" >> ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt & \
  echo "Total basepairs present in the subreads: $(grep -v ">" ./subreads_fasta/$PREFIX.pacbio.subreads.fasta | wc | awk '{print $3-$1}')" >> ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt
  head ./subreads_fasta/$PREFIX.pacbio_subreads_stats.txt
}

scraps_single() {
  mkdir -p scraps_fasta
  echo -e "\n ...converting scraps.bam to fasta... "
  samtools fasta *.scraps.bam > ./scraps_fasta/$PREFIX.pacbio.scraps.fasta
  echo "Scraps file : $PREFIX.pacbio.scraps.fasta"
  echo -e "\n ...counting the number of contigs and base pairs in the scraps..."
  echo "Total contigs present in scraps: $(grep -c ">" ./scraps_fasta/$PREFIX.pacbio.scraps.fasta)" >> ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt & /
  echo "Total basepairs present in the scraps: $(grep -v ">" ./scraps_fasta/$PREFIX.pacbio.scraps.fasta | wc | awk '{print $3-$1}')" >> ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt
  head ./scraps_fasta/$PREFIX.pacbio_scraps_stats.txt
}

# code chunk for usage when no argument given
if [[ -z "$1" ]]; then
  info
  exit 1
fi
#

PREFIX=
WORKDIR=
SCRAPS=
echo "Do you want to process *scraps.bam files too? This will take substantially longer. (y/n)"
read $SCRAPS
MODE=

while getopts ":p:d:m:" opt; do
  case $opt in
    p)
      echo "fasta file prefix set to: $OPTARG" >&2
      PREFIX=$OPTARG
      ;;
    d)
      WORKDIR=$OPTARG
      echo "working directory set to: $(readlink -f $OPTARG)"
      ;;
    m)
      MODE=$OPTARG
      echo "unpac will be run in $OPTARG mode"
      ;;
	\?)
      echo "Invalid option: -$OPTARG" >&2
      usage
      exit 1
      ;;
    :)
      echo "-$OPTARG requires an argument." >&2
      usage
      exit 1
      ;;
  esac
done

if [ "$MODE" == 'multi' ] && [ "$SCRAPS" != 'y' ] ;
  then process_subreads
elif [ "$MODE" == 'multi' ] && [ "$SCRAPS" == 'y' ] ;
  then process_subreads &&  process_scraps
fi

if [ "$MODE" == 'single' ] && [ "$SCRAPS" != 'y' ] ;
  then subreads_single
elif [ "$MODE" == 'single' ] && [ "$SCRAPS" == 'y' ] ;
  then subreads_single &&  scraps_single
fi

exit 1
